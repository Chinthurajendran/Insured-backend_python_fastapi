"""update user  table

Revision ID: 1cb4b3cfb469
Revises: c6a148d7931b
Create Date: 2025-02-17 12:16:03.843431

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1cb4b3cfb469'
down_revision: Union[str, None] = 'c6a148d7931b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('policytable')
    op.drop_table('agenttable')
    op.alter_column('usertable', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('usertable', 'annual_income',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('usertable', 'city',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('usertable', 'city',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('usertable', 'annual_income',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('usertable', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_table('agenttable',
    sa.Column('agent_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('agent_profile', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('agent_userid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('agent_idproof', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('agent_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('agent_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('rejection_reason', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('agent_login_status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('busy_status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('approval_status', postgresql.ENUM('approved', 'processing', 'rejected', name='approvalstatus'), autoincrement=False, nullable=True),
    sa.Column('is_agent', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('create_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('update_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('agent_id', name='agenttable_pkey'),
    sa.UniqueConstraint('agent_name', name='agenttable_agent_name_key')
    )
    op.create_table('policytable',
    sa.Column('policy_uid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('policy_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('policy_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('policy_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id_proof', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('passbook', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('photo', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('pan_card', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('income_proof', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('nominee_address_proof', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('coverage', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('settlement', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('premium_amount', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('age_group', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('income_range', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('create_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('update_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('policy_uid', name='policytable_pkey'),
    sa.UniqueConstraint('policy_id', name='policytable_policy_id_key'),
    sa.UniqueConstraint('policy_name', name='policytable_policy_name_key')
    )
    # ### end Alembic commands ###
